import{s as h}from"./main-Bqfk0G7A.js";const d="https://api.narrowroad-model.com";function k(){console.log("✅ login.ts 로드됨"),localStorage.removeItem("accessToken"),localStorage.removeItem("userInfo");const n=document.getElementById("login-form");if(!n){console.error("❌ 로그인 폼을 찾을 수 없음");return}n.addEventListener("submit",async e=>{e.preventDefault(),localStorage.removeItem("accessToken"),localStorage.removeItem("userInfo"),console.log("🗑️ 기존 로그인 토큰 삭제됨");const r=document.getElementById("adminId").value.trim(),o=document.getElementById("password").value.trim(),t=document.getElementById("agree").checked;if(!r||!o){alert("아이디와 비밀번호를 입력해주세요.");return}window.showLoading();try{const s=await fetch(`${d}/model_admin_login?func=login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({adminId:r,password:o})}),c=await s.json();s.ok?await g(c,t):alert(c.message||"로그인 실패. 다시 시도하세요.")}catch(s){console.error("❌ 로그인 요청 중 오류 발생:",s),alert("서버 오류가 발생했습니다. 다시 시도하세요.")}finally{window.hideLoading()}});const a=document.getElementById("kakao-login-btn");a&&a.addEventListener("click",u)}function u(){const e="https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=240886095629b93f9655026145a39487&redirect_uri=https://zeroadmin.kr/html/kakao-callback.html",r=window.matchMedia("(max-width: 768px)").matches,o=document.getElementById("agree").checked;if(r)console.log("📱 모바일 환경 → 리디렉트 방식"),window.location.href=e;else{console.log("💻 PC 환경 → 팝업 로그인 사용");const t=window.open(e,"kakaoLogin","width=500,height=700"),s=async c=>{if(c.origin!=="https://zeroadmin.kr")return;const{code:m}=c.data;if(!m){console.error("❌ 카카오 로그인 코드 없음"),alert("카카오 로그인 실패. 다시 시도하세요.");return}window.removeEventListener("message",s),t==null||t.close(),console.log("✅ 카카오 code 수신:",m);try{const i=await fetch(`${d}/model_admin_login?func=kakao-login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:m})}),l=await i.json();i.ok&&l.accessToken?(console.log("✅ 기존 사용자 로그인 성공"),await g(l,o)):i.ok&&l.redirectUrl?(console.log("🆕 신규 사용자 → 연동 페이지 이동"),window.location.href=l.redirectUrl):(console.error("❌ 카카오 로그인 실패 응답:",l),alert("카카오 로그인 실패. 다시 시도하세요."))}catch(i){console.error("❌ 카카오 로그인 요청 오류:",i),alert("서버 오류가 발생했습니다. 다시 시도하세요.")}};window.addEventListener("message",s,{once:!0})}}async function g(n,a=!1){try{localStorage.setItem("accessToken",n.accessToken),a?(console.log("✅ 로그인 성공 → 자동로그인 활성화"),localStorage.setItem("refreshToken",n.refreshToken)):(console.log("✅ 로그인 성공 → 자동로그인 삭제"),localStorage.removeItem("refreshToken")),console.log("✅ 로그인 성공 → 토큰 저장 완료!");const e=await fetch(`${d}/model_admin_login?func=me`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n.accessToken}`},mode:"cors"});if(!e.ok){console.error("❌ 사용자 정보 불러오기 실패:",e.status),alert("유저 정보를 불러오지 못했습니다.");return}const r=await e.json();if(r.userId){const o=await fetch(`${d}/model_user_setting?func=get-user&userId=${r.userId}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n.accessToken}`},mode:"cors"});if(o.ok){const{user:t}=await o.json();h(t),console.log("✅ 사용자 정보 저장 완료")}else{const t=await o.text();console.error("❌ 사용자 정보 조회 실패:",o.status,t),alert("사용자 정보를 불러오지 못했습니다.");return}}window.location.href="/html/home.html"}catch(e){console.error("❌ postLogin 처리 오류:",e),alert("로그인 후 처리 중 오류가 발생했습니다.")}}export{k as initLogin};

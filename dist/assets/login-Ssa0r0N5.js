const l="https://api.narrowroad-model.com";function m(){console.log("✅ login.ts 로드됨");const s=document.getElementById("login-form");if(!s){console.error("❌ 로그인 폼을 찾을 수 없음");return}s.addEventListener("submit",async t=>{t.preventDefault(),localStorage.removeItem("authToken"),localStorage.removeItem("userInfo"),console.log("🗑️ 기존 로그인 토큰 삭제됨");const a=document.getElementById("adminId").value.trim(),o=document.getElementById("password").value.trim();if(!a||!o){alert("아이디와 비밀번호를 입력해주세요.");return}window.showLoading();try{const r=await fetch(`${l}/model_admin_login?func=login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({adminId:a,password:o}),mode:"cors"}),i=await r.json();console.log("📥 로그인 응답:",r.status,i),r.ok?await c(i.accessToken):alert(i.message||"로그인 실패. 다시 시도하세요.")}catch(r){console.error("❌ 로그인 요청 중 오류 발생:",r),alert("서버 오류가 발생했습니다. 다시 시도하세요.")}finally{window.hideLoading()}});const e=document.getElementById("kakao-login-btn");e&&e.addEventListener("click",d)}function d(){const t="https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=240886095629b93f9655026145a39487&redirect_uri=https://zeroadmin.kr/html/kakao-callback.html";if(window.matchMedia("(max-width: 768px)").matches)console.log("📱 모바일 환경 → 리디렉트 방식"),window.location.href=t;else{console.log("💻 PC 환경 → 팝업 로그인 사용");const o=window.open(t,"kakaoLogin","width=500,height=700");window.addEventListener("message",r=>{if(r.origin!=="https://zeroadmin.kr")return;const{code:i}=r.data;i&&(console.log("✅ 카카오 로그인 코드 받음:",i),o==null||o.close(),fetch(`${l}/model_admin_login?func=kakao-login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:i})}).then(n=>n.json()).then(async n=>{n.token?(localStorage.removeItem("authToken"),console.log("🗑️ 기존 로그인 토큰 삭제됨"),await c(n.accessToken)):n.redirectUrl?(console.log("✅ 신규 사용자 → 연동 페이지로 이동:",n.redirectUrl),window.location.href=n.redirectUrl):alert("카카오 로그인 실패. 다시 시도하세요.")}).catch(n=>{console.error("❌ 로그인 오류:",n)}))})}}async function c(s){try{localStorage.setItem("authToken",s),console.log("✅ 로그인 성공 → 토큰 저장 완료!");const e=await fetch(`${l}/model_admin_login?func=me`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},mode:"cors"});if(!e.ok){console.error("❌ 사용자 정보 불러오기 실패:",e.status),alert("유저 정보를 불러오지 못했습니다.");return}const t=await e.json();if(console.log("👤 사용자 정보:",t),t.grade===4&&t.userId){const a=await fetch(`${l}/model_user_setting?func=get-user&userId=${t.userId}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},mode:"cors"});if(a.ok){const{user:o}=await a.json();localStorage.setItem("userInfo",JSON.stringify(o)),console.log("✅ 일반 사용자 정보 저장 완료")}else{const o=await a.text();console.error("❌ 사용자 정보 조회 실패:",a.status,o),alert("사용자 정보를 불러오지 못했습니다.");return}}window.location.href="/html/home.html"}catch(e){console.error("❌ postLogin 처리 오류:",e),alert("로그인 후 처리 중 오류가 발생했습니다.")}}export{m as initLogin};

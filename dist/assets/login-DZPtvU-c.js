const c="https://api.narrowroad-model.com";function m(){console.log("✅ login.ts 로드됨");const r=document.getElementById("login-form");if(!r){console.error("❌ 로그인 폼을 찾을 수 없음");return}r.addEventListener("submit",async t=>{t.preventDefault(),localStorage.removeItem("accessToken"),localStorage.removeItem("userInfo"),console.log("🗑️ 기존 로그인 토큰 삭제됨");const s=document.getElementById("adminId").value.trim(),e=document.getElementById("password").value.trim();if(!s||!e){alert("아이디와 비밀번호를 입력해주세요.");return}window.showLoading();try{const a=await fetch(`${c}/model_admin_login?func=login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({adminId:s,password:e})}),i=await a.json();console.log("📥 로그인 응답:",a.status,i),a.ok?await l(i):alert(i.message||"로그인 실패. 다시 시도하세요.")}catch(a){console.error("❌ 로그인 요청 중 오류 발생:",a),alert("서버 오류가 발생했습니다. 다시 시도하세요.")}finally{window.hideLoading()}});const o=document.getElementById("kakao-login-btn");o&&o.addEventListener("click",d)}function d(){const t="https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=240886095629b93f9655026145a39487&redirect_uri=https://zeroadmin.kr/html/kakao-callback.html";if(window.matchMedia("(max-width: 768px)").matches)console.log("📱 모바일 환경 → 리디렉트 방식"),window.location.href=t;else{console.log("💻 PC 환경 → 팝업 로그인 사용");const e=window.open(t,"kakaoLogin","width=500,height=700");window.addEventListener("message",a=>{if(a.origin!=="https://zeroadmin.kr")return;const{code:i}=a.data;i&&(console.log("✅ 카카오 로그인 코드 받음:",i),e==null||e.close(),fetch(`${c}/model_admin_login?func=kakao-login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:i})}).then(n=>n.json()).then(async n=>{n?await l(n):n.redirectUrl?(console.log("✅ 신규 사용자 → 연동 페이지로 이동:",n.redirectUrl),window.location.href=n.redirectUrl):alert("카카오 로그인 실패. 다시 시도하세요.")}).catch(n=>{console.error("❌ 로그인 오류:",n)}))})}}async function l(r){try{localStorage.setItem("accessToken",r.accessToken),localStorage.setItem("refreshToken",r.refreshToken),console.log("✅ 로그인 성공 → 토큰 저장 완료!");const o=await fetch(`${c}/model_admin_login?func=me`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r.accessToken}`},mode:"cors"});if(!o.ok){console.error("❌ 사용자 정보 불러오기 실패:",o.status),alert("유저 정보를 불러오지 못했습니다.");return}const t=await o.json();if(console.log("👤 사용자 정보:",t),t.grade===4&&t.userId){const s=await fetch(`${c}/model_user_setting?func=get-user&userId=${t.userId}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r.accessToken}`},mode:"cors"});if(s.ok){const{user:e}=await s.json();localStorage.setItem("userInfo",JSON.stringify(e)),console.log("✅ 일반 사용자 정보 저장 완료")}else{const e=await s.text();console.error("❌ 사용자 정보 조회 실패:",s.status,e),alert("사용자 정보를 불러오지 못했습니다.");return}}window.location.href="/html/home.html"}catch(o){console.error("❌ postLogin 처리 오류:",o),alert("로그인 후 처리 중 오류가 발생했습니다.")}}export{m as initLogin};
